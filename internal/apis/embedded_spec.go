// Code generated by go-swagger; DO NOT EDIT.

package apis

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Youtube API",
    "title": "Youtube API",
    "contact": {
      "email": "ridwan.rais2@gmail.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/comment": {
      "post": {
        "description": "Post comment endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Post comment",
        "parameters": [
          {
            "description": "post comment",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CommentPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "commentID": {
                  "type": "string",
                  "example": "1"
                },
                "message": {
                  "description": "comment created successfully",
                  "type": "string",
                  "example": "comment created successfully"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "delete": {
        "description": "Delete comment endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Delete comment",
        "parameters": [
          {
            "description": "delete comment",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CommentDelete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "commentID": {
                  "type": "string",
                  "example": "1"
                },
                "message": {
                  "description": "comment deleted successfully",
                  "type": "string",
                  "example": "comment deleted successfully"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/comments/{videoID}": {
      "get": {
        "security": [],
        "description": "Get a video's comments endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Get a video's comments",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "videoID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Comment"
                  }
                },
                "message": {
                  "description": "comments gotten successfully",
                  "type": "string"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/dislike/{video_id}": {
      "patch": {
        "description": "dislike a video",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Like"
        ],
        "summary": "dislike a video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "video_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "dislikeCount": {
                  "type": "integer",
                  "example": 100
                },
                "message": {
                  "description": "disliking a video is successful",
                  "type": "string",
                  "example": "disliking a video is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Health check endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Health"
        ],
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/definitions/Health"
                },
                "message": {
                  "description": "success retrieve data",
                  "type": "string",
                  "example": "app running well"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/like/{video_id}": {
      "patch": {
        "description": "like a video",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Like"
        ],
        "summary": "like a video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "video_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "likeCount": {
                  "type": "integer",
                  "example": 100
                },
                "message": {
                  "description": "liking a video is successful",
                  "type": "string",
                  "example": "liking a video is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/sub/{user_id}": {
      "patch": {
        "description": "subcribe a user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subscription"
        ],
        "summary": "subcribe a user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "subscribing a user is successful",
                  "type": "string",
                  "example": "subscribing a user is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/unsub/{user_id}": {
      "patch": {
        "description": "unsubcribe a user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subscription"
        ],
        "summary": "unsubcribe a user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "unsubscribing a user is successful",
                  "type": "string",
                  "example": "unsubscribing a user is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "security": [],
        "description": "Login",
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LoginResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Set-Cookie": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "security": [],
        "description": "Create user/channel endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "parameters": [
          {
            "description": "register user/channel",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user created successfully",
                  "type": "string",
                  "example": "user created successfully"
                },
                "userID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "security": [],
        "description": "get user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "get user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user gotten successfully",
                  "type": "string",
                  "example": "user gotten successfully"
                },
                "user": {
                  "type": "object",
                  "$ref": "#/definitions/UserResponse"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "description": "update user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "update user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "register user/channel",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user edited successfully",
                  "type": "string",
                  "example": "user edited successfully"
                },
                "updatedUser": {
                  "type": "object",
                  "$ref": "#/definitions/UserResponse"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "delete": {
        "description": "delete user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "delete user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user deleted successfully",
                  "type": "string",
                  "example": "user deleted successfully"
                },
                "userID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video": {
      "post": {
        "description": "Post video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Post video",
        "parameters": [
          {
            "description": "post video",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VideoPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video created successfully",
                  "type": "string",
                  "example": "video created successfully"
                },
                "videoID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/random": {
      "get": {
        "security": [],
        "description": "Get random videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get random videos",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "random videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/search/": {
      "get": {
        "security": [],
        "description": "Search for videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Search for videos",
        "parameters": [
          {
            "type": "string",
            "description": "search keyword",
            "name": "keyword",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "searched videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/sub": {
      "get": {
        "description": "Get subscribed videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get subscribed videos",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "random videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/tags/": {
      "get": {
        "security": [],
        "description": "Search for videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Search for videos",
        "parameters": [
          {
            "type": "string",
            "description": "search keyword",
            "name": "tags",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "searched videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/trend": {
      "get": {
        "security": [],
        "description": "Get trending videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get trending videos",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "trending videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/view/{id}": {
      "patch": {
        "description": "Add video view endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Add View",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video gotten successfully",
                  "type": "string"
                },
                "totalViews": {
                  "type": "integer"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/video/{id}": {
      "get": {
        "security": [],
        "description": "Get video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get Video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video gotten successfully",
                  "type": "string",
                  "example": "video gotten successfully"
                },
                "video": {
                  "type": "object",
                  "$ref": "#/definitions/Video"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "put": {
        "description": "Update video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Update video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "update video",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VideoUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video updated successfully",
                  "type": "string",
                  "example": "video updated successfully"
                },
                "video": {
                  "type": "object",
                  "$ref": "#/definitions/Video"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      },
      "delete": {
        "description": "Delete video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Delete Video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video deleted successfully",
                  "type": "string",
                  "example": "video deleted successfully"
                },
                "videoID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "$ref": "#/responses/BadRequest"
          },
          "401": {
            "$ref": "#/responses/BadRequest"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "type": "object",
      "required": [
        "userID",
        "videoID",
        "description"
      ],
      "properties": {
        "ID": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "description": {
          "type": "string",
          "example": "My first comment."
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "userID": {
          "type": "string",
          "example": "1"
        },
        "videoID": {
          "type": "string",
          "example": "My Comment"
        }
      }
    },
    "CommentDelete": {
      "type": "object",
      "required": [
        "videoID",
        "commentID"
      ],
      "properties": {
        "commentID": {
          "type": "string",
          "example": "commentID"
        },
        "videoID": {
          "type": "string",
          "example": "videoID"
        }
      }
    },
    "CommentPost": {
      "type": "object",
      "required": [
        "videoID",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "My first comment."
        },
        "videoID": {
          "type": "string",
          "example": "videoID"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "error"
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "UP"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "account_type": {
          "type": "string"
        },
        "expired_at": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "UserRegister": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "ridwan.rais2@gmail.com"
        },
        "img": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "subscribedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscribers": {
          "type": "number"
        },
        "username": {
          "type": "string",
          "example": "0889504178114"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "example": "ridwan.rais2@gmail.com"
        },
        "img": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "subscribedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscribers": {
          "type": "number"
        },
        "username": {
          "type": "string",
          "example": "0889504178114"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "ridwan.rais2@gmail.com"
        },
        "img": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "subscribedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscribers": {
          "type": "number"
        },
        "username": {
          "type": "string",
          "example": "0889504178114"
        }
      }
    },
    "Video": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "description": {
          "type": "string",
          "example": "My first video."
        },
        "dislikes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imgUrl": {
          "type": "string"
        },
        "likes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "example": "My Video"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "userID": {
          "type": "string",
          "example": "1"
        },
        "videoUrl": {
          "type": "string"
        },
        "views": {
          "type": "integer"
        }
      }
    },
    "VideoPost": {
      "type": "object",
      "required": [
        "title",
        "description",
        "imgUrl",
        "videoUrl"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "My first video."
        },
        "imgUrl": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "example": "My Video"
        },
        "videoUrl": {
          "type": "string"
        }
      }
    },
    "VideoUpdate": {
      "type": "object",
      "required": [
        "title",
        "description",
        "imgUrl",
        "videoUrl"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "My first video."
        },
        "imgUrl": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "example": "My Video"
        },
        "videoUrl": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "BadRequest": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The specified resource was not found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Unauthorized": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "description": "Every request and response about Youtube API",
      "name": "Youtube API"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Youtube API",
    "title": "Youtube API",
    "contact": {
      "email": "ridwan.rais2@gmail.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/comment": {
      "post": {
        "description": "Post comment endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Post comment",
        "parameters": [
          {
            "description": "post comment",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CommentPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "commentID": {
                  "type": "string",
                  "example": "1"
                },
                "message": {
                  "description": "comment created successfully",
                  "type": "string",
                  "example": "comment created successfully"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete comment endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Delete comment",
        "parameters": [
          {
            "description": "delete comment",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CommentDelete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "commentID": {
                  "type": "string",
                  "example": "1"
                },
                "message": {
                  "description": "comment deleted successfully",
                  "type": "string",
                  "example": "comment deleted successfully"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/comments/{videoID}": {
      "get": {
        "security": [],
        "description": "Get a video's comments endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Comment"
        ],
        "summary": "Get a video's comments",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "videoID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "comments": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Comment"
                  }
                },
                "message": {
                  "description": "comments gotten successfully",
                  "type": "string"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/dislike/{video_id}": {
      "patch": {
        "description": "dislike a video",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Like"
        ],
        "summary": "dislike a video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "video_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "dislikeCount": {
                  "type": "integer",
                  "example": 100
                },
                "message": {
                  "description": "disliking a video is successful",
                  "type": "string",
                  "example": "disliking a video is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Health check endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Health"
        ],
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "$ref": "#/definitions/Health"
                },
                "message": {
                  "description": "success retrieve data",
                  "type": "string",
                  "example": "app running well"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/like/{video_id}": {
      "patch": {
        "description": "like a video",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Like"
        ],
        "summary": "like a video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "video_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "likeCount": {
                  "type": "integer",
                  "example": 100
                },
                "message": {
                  "description": "liking a video is successful",
                  "type": "string",
                  "example": "liking a video is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sub/{user_id}": {
      "patch": {
        "description": "subcribe a user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subscription"
        ],
        "summary": "subcribe a user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "subscribing a user is successful",
                  "type": "string",
                  "example": "subscribing a user is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/unsub/{user_id}": {
      "patch": {
        "description": "unsubcribe a user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Subscription"
        ],
        "summary": "unsubcribe a user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "user_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "unsubscribing a user is successful",
                  "type": "string",
                  "example": "unsubscribing a user is successful"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "security": [],
        "description": "Login",
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "$ref": "#/definitions/LoginResponse"
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Set-Cookie": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "security": [],
        "description": "Create user/channel endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "parameters": [
          {
            "description": "register user/channel",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserRegister"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user created successfully",
                  "type": "string",
                  "example": "user created successfully"
                },
                "userID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "security": [],
        "description": "get user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "get user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user gotten successfully",
                  "type": "string",
                  "example": "user gotten successfully"
                },
                "user": {
                  "type": "object",
                  "$ref": "#/definitions/UserResponse"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "update user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "update user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "register user/channel",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user edited successfully",
                  "type": "string",
                  "example": "user edited successfully"
                },
                "updatedUser": {
                  "type": "object",
                  "$ref": "#/definitions/UserResponse"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "delete user",
        "produces": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "delete user",
        "parameters": [
          {
            "type": "string",
            "description": "The id of user",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "user deleted successfully",
                  "type": "string",
                  "example": "user deleted successfully"
                },
                "userID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video": {
      "post": {
        "description": "Post video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Post video",
        "parameters": [
          {
            "description": "post video",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VideoPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video created successfully",
                  "type": "string",
                  "example": "video created successfully"
                },
                "videoID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/random": {
      "get": {
        "security": [],
        "description": "Get random videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get random videos",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "random videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/search/": {
      "get": {
        "security": [],
        "description": "Search for videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Search for videos",
        "parameters": [
          {
            "type": "string",
            "description": "search keyword",
            "name": "keyword",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "searched videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/sub": {
      "get": {
        "description": "Get subscribed videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get subscribed videos",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "random videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/tags/": {
      "get": {
        "security": [],
        "description": "Search for videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Search for videos",
        "parameters": [
          {
            "type": "string",
            "description": "search keyword",
            "name": "tags",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "searched videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/trend": {
      "get": {
        "security": [],
        "description": "Get trending videos endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get trending videos",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "trending videos gotten successfully",
                  "type": "string"
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Video"
                  }
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/view/{id}": {
      "patch": {
        "description": "Add video view endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Add View",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video gotten successfully",
                  "type": "string"
                },
                "totalViews": {
                  "type": "integer"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/video/{id}": {
      "get": {
        "security": [],
        "description": "Get video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Get Video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video gotten successfully",
                  "type": "string",
                  "example": "video gotten successfully"
                },
                "video": {
                  "type": "object",
                  "$ref": "#/definitions/Video"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "Update video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Update video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "update video",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/VideoUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video updated successfully",
                  "type": "string",
                  "example": "video updated successfully"
                },
                "video": {
                  "type": "object",
                  "$ref": "#/definitions/Video"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "description": "Delete video endpoint",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Video"
        ],
        "summary": "Delete Video",
        "parameters": [
          {
            "type": "string",
            "description": "The id of video",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "description": "video deleted successfully",
                  "type": "string",
                  "example": "video deleted successfully"
                },
                "videoID": {
                  "type": "string",
                  "example": "1"
                }
              }
            },
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "type": "object",
      "required": [
        "userID",
        "videoID",
        "description"
      ],
      "properties": {
        "ID": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "description": {
          "type": "string",
          "example": "My first comment."
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "userID": {
          "type": "string",
          "example": "1"
        },
        "videoID": {
          "type": "string",
          "example": "My Comment"
        }
      }
    },
    "CommentDelete": {
      "type": "object",
      "required": [
        "videoID",
        "commentID"
      ],
      "properties": {
        "commentID": {
          "type": "string",
          "example": "commentID"
        },
        "videoID": {
          "type": "string",
          "example": "videoID"
        }
      }
    },
    "CommentPost": {
      "type": "object",
      "required": [
        "videoID",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "My first comment."
        },
        "videoID": {
          "type": "string",
          "example": "videoID"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "example": "error"
        }
      }
    },
    "Health": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "UP"
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "username",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "account_type": {
          "type": "string"
        },
        "expired_at": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "UserRegister": {
      "type": "object",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "ridwan.rais2@gmail.com"
        },
        "img": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "subscribedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscribers": {
          "type": "number"
        },
        "username": {
          "type": "string",
          "example": "0889504178114"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "example": "ridwan.rais2@gmail.com"
        },
        "img": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "subscribedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscribers": {
          "type": "number"
        },
        "username": {
          "type": "string",
          "example": "0889504178114"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "ridwan.rais2@gmail.com"
        },
        "img": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "example": "123456"
        },
        "subscribedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "subscribers": {
          "type": "number"
        },
        "username": {
          "type": "string",
          "example": "0889504178114"
        }
      }
    },
    "Video": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "description": {
          "type": "string",
          "example": "My first video."
        },
        "dislikes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "imgUrl": {
          "type": "string"
        },
        "likes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "example": "My Video"
        },
        "updatedAt": {
          "type": "string",
          "example": "2021-09-28T07:38:30.273469Z"
        },
        "userID": {
          "type": "string",
          "example": "1"
        },
        "videoUrl": {
          "type": "string"
        },
        "views": {
          "type": "integer"
        }
      }
    },
    "VideoPost": {
      "type": "object",
      "required": [
        "title",
        "description",
        "imgUrl",
        "videoUrl"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "My first video."
        },
        "imgUrl": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "example": "My Video"
        },
        "videoUrl": {
          "type": "string"
        }
      }
    },
    "VideoUpdate": {
      "type": "object",
      "required": [
        "title",
        "description",
        "imgUrl",
        "videoUrl"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "My first video."
        },
        "imgUrl": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "example": "My Video"
        },
        "videoUrl": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "BadRequest": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "NotFound": {
      "description": "The specified resource was not found",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    },
    "Unauthorized": {
      "description": "Unauthorized",
      "schema": {
        "$ref": "#/definitions/Error"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "tags": [
    {
      "description": "Every request and response about Youtube API",
      "name": "Youtube API"
    }
  ]
}`))
}
